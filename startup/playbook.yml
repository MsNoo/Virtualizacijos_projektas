# TODO: move most logic from all Dockerfiles to this file
- name: Main playbook
  hosts: localhost
  gather_facts: true

  vars:
    s3BucketName: "dev0-document-storage"

    # AWS credentials are sensitive and should not be committed - preferably fetched from SecretsManager or passed to ansible
    awsAccessKeyId:
    awsSecretAccessKey:

  tasks:
    - name: Install pip [startup]
      community.docker.docker_container_exec:
        container: startup
        command: apt-get install python3-pip -y

    - name: Install required aws-related libs [startup]
      community.docker.docker_container_exec:
        container: startup
        command: pip install boto3

    - name: Update apt cache [startup]
      community.docker.docker_container_exec:
        container: startup
        command: apt-get update

    # Should read from SecretsManager or environment variable
    - name: Set AWS credentials & config
      shell: |
        mkdir -p /root/.aws
        echo "[default]
        aws_access_key_id = {{awsAccessKeyId}}
        aws_secret_access_key = {{awsSecretAccessKey}}" > /root/.aws/credentials
        echo "[default]
        region = us-west-2" > /root/.aws/config

    - name: Create S3 bucket for document storage
      amazon.aws.s3_bucket:
        name: "{{s3BucketName}}"
        region: us-west-2
        state: present
        encryption: "AES256"
        public_access:
          block_public_acls: true
          block_public_policy: true
          ignore_public_acls: true
      register: stdout
    - debug: var=stdout

    - name: Copy .env.sample -> .env [document-microservice]
      community.docker.docker_container_exec:
        container: document-microservice
        command: cp .env.sample .env

    - name: Modify .env S3_BUCKET_NAME value [document-microservice]
      community.docker.docker_container_exec:
        container: document-microservice
        command: sed -i "s/your-bucket-name/{{s3BucketName}}/g" .env

    - name: Modify .env AWS_ACCESS_KEY_ID value [document-microservice]
      community.docker.docker_container_exec:
        container: document-microservice
        command: sed -i "s/your-access-key-id/{{awsAccessKeyId}}/g" .env

    - name: Modify .env AWS_SECRET_ACCESS_KEY value [document-microservice]
      community.docker.docker_container_exec:
        container: document-microservice
        command: sed -i "s/your-secret-access-key/{{awsSecretAccessKey}}/g" .env

    - name: Install packages [document-microservice]
      community.docker.docker_container_exec:
        container: document-microservice
        command: npm ci --omit=dev

    - name: Start [document-microservice]
      community.docker.docker_container_exec:
        container: document-microservice
        command: npm start &
      register: stdout
    - debug: var=stdout

    - name: Install packages [vhostbackup]
      community.docker.docker_container_exec:
        container: vhostbackup
        command: pip3 install flask-restful docker pyyaml

    - name: Startup successful [startup & vhostbackup]
      community.docker.docker_container_exec:
        container: vhostbackup
        command: python /tmp/server.py && echo "Successfully started up!"
